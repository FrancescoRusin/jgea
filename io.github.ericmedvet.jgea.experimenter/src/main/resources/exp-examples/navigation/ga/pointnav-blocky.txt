ea.experiment(
    runs = (randomGenerator = (seed = [-10:1:-1]) * [m.defaultRG()]) *
        (
            problem = ea.p.numEnvTo(
                dT = 0.1;
                finalT = 30;
                environment = ds.e.pointNavigation(
                    arena = BLOCKY_MAZE;
                    initialRobotXRange = m.range(min = 0.5; max = 0.5);
                    initialRobotYRange = m.range(min = 0.75; max = 0.75);
                    robotMaxV = 0.05
                );
                f = ds.e.n.avgD();
                type = MINIMIZE
            )
        ) * (
            solver = (crossoverP = 0.0) * (nPop = 200) * (nEval = 100000) * (remap = false) * [
                ea.s.ga(
                    name = "pointnav-blocky-nn";
                    representation = ea.r.doubleString();
                    mapper = ea.m.dsToNpnds(npnds = ds.num.mlp(innerLayerRatio = 2.0))
                );
                ea.s.ga(
                    name = "pointnav-blocky-poly";
                    representation = ea.r.doubleString();
                    mapper = ea.m.dsToNpnds(npnds = ds.num.mdPolynomial(degree = 3))
                );
                ea.s.ga(
                    name = "pointnav-blocky-tree";
                    representation = ea.representation.multiSRTree();
                    mapper = ea.mapper.nmrfToNds(of = ea.mapper.multiSrTreeToNmrf())
                )
            ]
        ) * [ea.run()];
    listeners = [
        ea.l.allCsv(
            path = "/home/francescorusin/Desktop/Work/MapElites/Current/Full_redo/GA/Csv/pointnav_blocky_all.csv";
            individualFunctions = [
                ea.f.simQuality(of = ea.f.quality());
                ds.e.n.x(of = ds.e.n.finalRobotP(of = ea.f.simOutcome(of = ea.f.quality())));
                ds.e.n.y(of = ds.e.n.finalRobotP(of = ea.f.simOutcome(of = ea.f.quality())));
                ea.f.id();
                f.nTh(of = ea.f.parentIds(); n = 0);
                f.toBase64(of = ea.function.genotype())
            ];
            functions = [ea.f.elapsedSecs()];
            runFunctions = [];
            deferred = true;
            onlyLast = false
        );
        ea.l.onRunDone(
            of = ea.acc.lastBest();
            preprocessor = ea.f.toImage(image = ds.d.pointNavigation(); of = ea.f.simOutcome(of = ea.f.quality()));
            consumers = [
                ea.c.saver(path = "/home/francescorusin/Desktop/Work/MapElites/GA/Drawings/{run.solver.name}-best-trajectory{run.randomGenerator.seed}")
            ]
        );
        ea.l.onExpDone(
            of = ea.plot.multi.xy(
                xSubplot = ea.f.runString(s = "_");
                ySubplot = ea.f.runString(s = "_");
                x = f.quantized(of = ea.f.nOfEvals(); q = 1000);
                y = ea.f.simQuality(of = ea.f.quality(of = ea.f.best()));
                line = ea.f.runString(s = "{run.solver.name}")
            );
            consumers = [
                ea.c.saver(
                    path = "/home/francescorusin/Desktop/Work/MapElites/GA/Drawings/{name}-fitness-graph";
                    of = ea.f.imagePlotter()
                );
                ea.c.saver(
                    path = "/home/francescorusin/Desktop/Work/MapElites/GA/Drawings/{name}-fitness-graph";
                    of = ea.f.csvPlotter()
                )
            ]
        );
        ea.l.onExpDone(
            of = ea.plot.multi.yBoxplot(
                xSubplot = ea.f.runString(s = "_");
                ySubplot = ea.f.runString(s = "_");
                y = ea.f.simQuality(of = ea.f.quality(of = ea.f.best()));
                box = ea.f.runString(s = "{run.solver.name}");
                predicateValue = ea.f.rate(of = ea.f.progress());
                condition = predicate.gtEq(t = 1)
            );
            consumers = [
                ea.c.saver(
                    path = "/home/francescorusin/Desktop/Work/MapElites/GA/Drawings/{name}-fitness-box";
                    of = ea.f.imagePlotter()
                );
                ea.c.saver(
                    path = "/home/francescorusin/Desktop/Work/MapElites/GA/Drawings/{name}-fitness-box";
                    of = ea.f.csvPlotter()
                )
            ]
        )
    ]
)