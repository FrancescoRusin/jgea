ea.experiment(
  runs = (randomGenerator = (seed = [1:1:1]) * [ea.rg.defaultRG()]) *
    (problem = [
      ea.p.numEnvTo(environment = ds.e.navigation(arena = large_barrier); f = ds.e.n.avgD(); finalT = 50);
      ea.p.numEnvTo(environment = ds.e.navigation(arena = easy_maze); f = ds.e.n.avgD(); finalT = 50)
    ]) *
    (solver = (nEval = [2500]) * (mapper = [ea.m.compose(
      first = ea.m.mlpToMrf(innerLayerRatio = 5);
      second = ea.m.mrfToNds()
    )]) * [
      ea.s.ga(representation = ea.r.doubleString());
      ea.s.pso()
    ]) * [
    ea.run()
  ];
  listeners = [
    ea.l.console(
      functions = [
        ea.nf.size(f = ea.nf.genotype(individual = ea.nf.best()); s = "%3d");
        ea.nf.simulationQuality(s = "%6.2f"; individual = ea.nf.best());
        ea.nf.hist(collection = ea.nf.each(map = ea.nf.simulationQuality(); collection = ea.nf.all()));
        ea.nf.percentile(collection = ea.nf.each(map = ea.nf.simulationQuality(); collection = ea.nf.all()); p = 0.75; s = "%6.2f")
      ];
      runKeys = [
        ea.misc.sEntry(key = "problem.name"; value = "{problem.name}");
        ea.misc.sEntry(key = "solver"; value = "{solver.name}");
        ea.misc.sEntry(key = "seed"; value = "{randomGenerator.seed}")
      ]
    );
    ea.l.expPlotSaver(
      filePath = "../navigation-fitness.png";
      freeScales = true;
      w = 600; h = 1000;
      type = lines;
      plot = ea.plot.fitnessPlotMatrix(
        xFunction = ea.nf.quantized(f = ea.nf.evals(); r = 50);
        yFunction = ea.nf.simulationQuality(individual = ea.nf.best())
      )
    );
    ea.l.runImageVideoSaver(
      drawer = ds.d.navigation();
      function = ea.nf.simulationBehavior(individual = ea.nf.best());
      filePathTemplate = "../bests-{problem.name}-{solver.name}-{randomGenerator.seed:%04d}.mp4"
    );
    ea.l.runLastSimulationVideoSaver(
      drawer = ds.d.navigation();
      filePathTemplate = "../finalBest-{problem.name}-{solver.name}-{randomGenerator.seed:%04d}.mp4"
    )
  ]
)