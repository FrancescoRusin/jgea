ea.experiment(
  runs = (randomGenerator = (seed = [1:1:5]) * [m.defaultRG()]) *
    (problem = [
      ea.p.ur.synthetic(name = "keijzer6");
      ea.p.ur.synthetic(name = "nguyen7");
      ea.p.ur.synthetic(name = "korns12");
      ea.p.ur.synthetic(name = "vladislavleva4")
    ]) *
    (solver = (nEval = [1000]) * [
      ea.s.ga(
        name = "gp";
        representation = ea.r.srTree();
        mapper = ea.m.srTreeToNurf()
      );
      ea.s.ga(
        name = "ga+mlp";
        representation = ea.r.doubleString();
        mapper = ea.m.nmrfToNurf(of = ea.m.ntissToNmrf(of = ea.m.dsToNpnds(npnds = ds.num.mlp(activationFunction = relu))))
      )
    ]) * [
    ea.run()
  ];
  listeners = [
    ea.l.console(
      functions = [
        ea.f.size(of = ea.f.genotype(of = ea.f.best()); format = "%3d");
        ea.f.quality(of = ea.f.best(); format = "%6.2f");
        f.percentile(of = f.each(of = ea.f.all(); mapF = ea.f.quality()); p = 75; format = "%6.2f");
        ea.f.hist(of = f.each(of = ea.f.all(); mapF = ea.f.quality()));
        ea.f.validationQuality(format = "%6.2f");
        ea.f.solution(of = ea.f.best(); format = "%60.60s")
      ];
      runKeys = [
        ea.misc.sEntry(key = "problem.name"; value = "{problem.name}");
        ea.misc.sEntry(key = "solver"; value = "{solver.name}");
        ea.misc.sEntry(key = "seed"; value = "{randomGenerator.seed}")
      ];
      onlyLast = true
    );
    ea.l.expPlotSaver(
      filePath = "../sr.png";
      freeScales = true;
      w = 600; h = 1000;
      type = lines;
      plot = ea.plot.qualityPlotMatrix()
    )
  ]
)