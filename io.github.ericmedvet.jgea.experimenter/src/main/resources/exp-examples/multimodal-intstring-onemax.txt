ea.experiment(
  runs = (randomGenerator = (seed = [1:1:1]) * [ea.rg.defaultRG()]) *
    (solver = (nEval = [15000]) * [
      ea.s.intStringGa(name = "ga-div");
      ea.s.intStringGa(name = "ga"; maxUniquenessAttempts = 0);
      ea.s.intStringCabea(name = "cabea-e-11"; keepProbability = 0; substrate = empty; gridSize = 11);
      ea.s.intStringCabea(name = "cabea-cc-11"; keepProbability = 0; substrate = contour_cross; gridSize = 11);
      ea.s.intStringCabea(name = "cabea-e-21"; keepProbability = 0; substrate = empty; gridSize = 21);
      ea.s.intStringCabea(name = "cabea-cc-21"; keepProbability = 0; substrate = contour_cross; gridSize = 21)
    ]) * [
    ea.run(problem = ea.p.s.multiModalIntOneMax(nOfTargets = 3))
  ];
  listeners = [
    ea.l.console(
      functions = [
        ea.nf.size(f = ea.nf.genotype(individual = ea.nf.best()); s = "%3d");
        ea.nf.bestFitness(s = "%5.3f");
        ea.nf.overallTargetDistance(
          collection = ea.nf.each(map = ea.nf.solution(); collection = ea.nf.all());
          problem = ea.p.s.multiModalIntOneMax(nOfTargets = 3)
        );
        ea.nf.solution(individual = ea.nf.best(); s = "%40.40s")
      ];
      runKeys = [
        ea.misc.sEntry(key = "seed"; value = "{randomGenerator.seed}");
        ea.misc.sEntry(key = "solver"; value = "{solver.name}")
      ]
    );
    ea.l.expPlotSaver(
      filePath = "../plot-fitness.png";
      freeScales = true;
      plot = ea.plot.fitnessPlotMatrix(
        lineRunKey = ea.misc.sEntry(key = "solver"; value = "{solver.name}")
      )
    );
    ea.l.expPlotSaver(
      filePath = "../plot-otd.png";
      freeScales = true;
      plot = ea.plot.fitnessPlotMatrix(
        lineRunKey = ea.misc.sEntry(key = "solver"; value = "{solver.name}");
        yFunction = ea.nf.overallTargetDistance(
          collection = ea.nf.each(map = ea.nf.solution(); collection = ea.nf.all());
          problem = ea.p.s.multiModalIntOneMax(nOfTargets = 3)
        )
      )
    );
    ea.l.runPlotSaver(
      w = 1000; h = 600;
      filePathTemplate = "../grids-{solver.name}-{problem:%#s}-{randomGenerator.seed}.png";
      plot = ea.plot.gridPopulation(
        titleRunKey = ea.misc.sEntry(key = "run"; value = "{solver.name} on {problem:%#s} seed={randomGenerator.seed}");
        individualFunctions = [
          ea.nf.fitness();
          ea.nf.nth(n = 0; list = ea.nf.targetDistances(problem = ea.p.s.multiModalIntOneMax(nOfTargets = 3)));
          ea.nf.nth(n = 1; list = ea.nf.targetDistances(problem = ea.p.s.multiModalIntOneMax(nOfTargets = 3)));
          ea.nf.nth(n = 2; list = ea.nf.targetDistances(problem = ea.p.s.multiModalIntOneMax(nOfTargets = 3)))
        ];
        predicateValue = ea.nf.quantized(f = ea.nf.evals(); r = 1000; s = "%.0f");
        condition = ea.predicate.inD(
          values = [0; 1000; 2000; 5000; 10000]
        )
      );
      condition = ea.predicate.all(conditions = [
        ea.predicate.matches(
          f = ea.nf.runKey(runKey = ea.misc.sEntry(key = "solver"; value = "{solver.name}"));
          regex = "cabea.*"
        );
        ea.predicate.inS(
          f = ea.nf.runKey(runKey = ea.misc.sEntry(key = "seed"; value = "{randomGenerator.seed}"));
          values = ["1"]
        )
      ])
    )
  ]
)