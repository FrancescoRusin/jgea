ea.experiment(
  runs = (randomGenerator = (seed = [1:1:5]) * [ea.rg.defaultRG()]) *
    (problem = (p = [2; 10]) * [
      ea.p.s.ackley(name = "ackley");
      ea.p.s.circularPointsAiming(name = "cpa")
    ]) *
    (solver = (nEval = [1000]) * [
      ea.s.ga(representation = ea.r.doubleString());
      ea.s.differentialEvolution()
    ]) * [
    ea.run()
  ];
  listeners = [
    ea.l.console(
      functions = [
        ea.f.size(of = ea.f.genotype(of = ea.f.best()); format = "%3d");
        ea.f.quality(of = ea.f.best(); format = "%6.2f");
        ea.f.hist(of = f.each(of = ea.f.all(); mapF = ea.f.quality()))
      ];
      runKeys = [
        ea.misc.sEntry(key = "problem.name"; value = "{problem.name}");
        ea.misc.sEntry(key = "problem.p"; value = "{problem.p}");
        ea.misc.sEntry(key = "solver"; value = "{solver.name}");
        ea.misc.sEntry(key = "seed"; value = "{randomGenerator.seed}")
      ];
      onlyLast = true
    );
    ea.l.expPlotSaver(
      filePath = "../numopt-bestf-vs-evals.png";
      freeScales = true;
      type = lines;
      plot = ea.plot.qualityPlotMatrix(
        xFunction = f.quantized(of = ea.f.nOfEvals(); q = 50);
        xSubplotRunKey = ea.misc.sEntry(key = p; value = "{problem.p}");
        ySubplotRunKey = ea.misc.sEntry(key = problem; value = "{problem.name}")
      )
    );
    ea.l.expPlotSaver(
      filePath = "../numopt-bestf-boxplot.png";
      freeScales = true;
      type = boxplot;
      plot = ea.plot.qualityBoxplotMatrix(
        xSubplotRunKey = ea.misc.sEntry(key = p; value = "{problem.p}");
        ySubplotRunKey = ea.misc.sEntry(key = problem; value = "{problem.name}")
      )
    )
  ]
)