ea.experiment(
  runs = (randomGenerator = (seed = [1:1:1]) * [ea.rg.defaultRG()]) *
    (solver = (nEval = [10000]) * [
      ea.s.intStringGa(name = "ga-div");
      ea.s.intStringGa(name = "ga"; maxUniquenessAttempts = 0);
      ea.s.intStringNsga2(name = "nsga2-div");
      ea.s.intStringNsga2(name = "nsga2"; maxUniquenessAttempts = 0);
      ea.s.intStringCabea(name = "cabea-e"; keepProbability = 0; substrate = empty);
      ea.s.intStringCabea(name = "cabea-cc"; keepProbability = 0; substrate = contour_cross)
    ]) * (problem = [
      ea.p.s.multiObjectiveIntOneMax();
      ea.p.mhoProblem(mtProblem = ea.p.s.multiModalIntOneMax(nOfTargets = 2))
    ]) * [
    ea.run()
  ];
  listeners = [
    ea.l.console(
      functions = [
        ea.nf.size(f = ea.nf.genotype(individual = ea.nf.best()); s = "%3d");
        ea.nf.bestFitness(f = ea.nf.nth(n = 0));
        ea.nf.bestFitness(f = ea.nf.nth(n = 1));
        ea.nf.max(collection = ea.nf.each(map = ea.nf.fitness(f = ea.nf.nth(n = 0)); collection = ea.nf.all()));
        ea.nf.max(collection = ea.nf.each(map = ea.nf.fitness(f = ea.nf.nth(n = 1)); collection = ea.nf.all()));
        ea.nf.hypervolume2D(
          collection = ea.nf.each(map = ea.nf.fitness(); collection = ea.nf.firsts());
          ranges = [ds.range(min = 0; max = 1); ds.range(min = 0; max = 1)]
        );
        ea.nf.solution(individual = ea.nf.best(); s = "%40.40s")
      ];
      runKeys = [
        ea.misc.sEntry(key = "solver"; value = "{solver.name}");
        ea.misc.sEntry(key = "problem"; value = "{problem:%#s}");
        ea.misc.sEntry(key = "seed"; value = "{randomGenerator.seed}")
      ]
    );
    ea.l.expPlotSaver(
      filePath = "../plot-mo-hv.png";
      freeScales = true;
      plot = ea.plot.fitnessPlotMatrix(
        lineRunKey = ea.misc.sEntry(key = "solver"; value = "{solver.name}");
        yFunction = ea.nf.hypervolume2D(
          collection = ea.nf.each(map = ea.nf.fitness(); collection = ea.nf.firsts());
          ranges = [ds.range(min = 0; max = 1); ds.range(min = 0; max = 1)]
        )
      )
    );
    ea.l.expPlotSaver(
      filePath = "../plot-mo-obj0.png";
      freeScales = true;
      plot = ea.plot.fitnessPlotMatrix(
        lineRunKey = ea.misc.sEntry(key = "solver"; value = "{solver.name}");
        yFunction = ea.nf.max(collection = ea.nf.each(map = ea.nf.fitness(f = ea.nf.nth(n = 0)); collection = ea.nf.all()))
      )
    );
    ea.l.expPlotSaver(
      filePath = "../plot-mo-obj1.png";
      freeScales = true;
      plot = ea.plot.fitnessPlotMatrix(
        lineRunKey = ea.misc.sEntry(key = "solver"; value = "{solver.name}");
        yFunction = ea.nf.max(collection = ea.nf.each(map = ea.nf.fitness(f = ea.nf.nth(n = 1)); collection = ea.nf.all()))
      )
    );
    ea.l.runPlotSaver(
      w = 1000; h = 200;
      filePathTemplate = "../grids-obj0-{solver.name}-{problem:%#s}-{randomGenerator.seed}.png";
      plot = ea.plot.gridPopulation(
        titleRunKey = ea.misc.sEntry(key = "run"; value = "obj0 for {solver.name}-{problem:%#s}-{randomGenerator.seed}");
        individualFunction = ea.nf.fitness(f = ea.nf.nth(n = 0));
        predicateValue = ea.nf.iterations();
        condition = ea.predicate.inL(
          f = ea.nf.iterations();
          values = [1; 10; 25; 50; 75]
        )
      );
      condition = ea.predicate.all(conditions = [
        ea.predicate.matches(
          f = ea.nf.runKey(runKey = ea.misc.sEntry(key = "solver"; value = "{solver.name}"));
          regex = "cabea.*"
        );
        ea.predicate.inS(
          f = ea.nf.runKey(runKey = ea.misc.sEntry(key = "seed"; value = "{randomGenerator.seed}"));
          values = ["1"]
        )
      ])
    )
  ]
)